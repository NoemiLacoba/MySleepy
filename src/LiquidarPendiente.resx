<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox4.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAElFTkSuQmCC
</value>
  </data>
</root>